package org.esa.beam.waterradiance.realoptimizers;

import org.esa.beam.ocnnrd.SensorContextFactory;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertEquals;

public class LevMarNNAcceptanceTest {

    private static final double[] SUN_SPECTRAL_FLUXES_NORMAN = {
            1773.03,
            1942.73,
            1993.86,
            1994.48,
            1864.34,
            1706.86,
            1583.67,
            1522.19,
            1455.78,
            1309.06,
            1297.21,
            1217.26,
            990.95,
            961.43,
            925.89
    };

    private static final double[] SUN_SPECTRAL_FLUXES_20060116 = {
            1773.7241,
            1943.4926,
            1994.6368,
            1995.2565,
            1865.0692,
            1707.5303,
            1584.2865,
            1522.7838,
            1456.3502,
            1309.5717,
            1297.716,
            1217.7358,
            991.3362,
            961.8075,
            926.2471
    };

    private static double[] expected_Norman =         new double[]{0.05106093416816374, 0.04016991778889496, 0.02909920769222207, 0.02572070343095661, 0.02011765458709306, 0.012768282032716158, 0.010003103221994807, 0.009281329685685624, 0.00797110510189507, 0.006325542223074678, 0.005709368943107607, 0.004271587237326763,     0.16281308405924194, 0.12619280260217292, 0.08687161168515742, 0.07486973049870894, 0.05339959343889217, 0.0370564229945151,  0.029337370207401778, 0.027019347884007068, 0.02390260194519231,  0.019268848562867577, 0.017459988590994,    0.012901569754351874, 7.167873004771531E-4,  0.0010836641704975664, 0.0019368205713021923, 0.0021872770960157666,  0.002161622209436295,   5.507143747090343E-4, 3.0175633310900336E-4, 2.6349659868477813E-4, 1.4522239862986577E-4, 4.007014395578548E-5,  4.257714524421732E-5,  1.5963053582322965E-5, 0.830541782618544,   0.8657774770228324, 0.9043209856415628, 0.9160390090828641, 0.9380469918493813, 0.9550217213505763, 0.9634432378200679, 0.9661162700835555, 0.9696736705639499, 0.974654407143042,  0.9768345203428852, 0.9831557064329035, 0.8448484163572472, 0.8777921944146652, 0.9137209486682353, 0.92462548765780067, 0.9449552271513675, 0.960442923835639,  0.9682592296791303, 0.9705425399820697, 0.9738463488882447, 0.9782952091217753, 0.980369791721596,  0.9857366361952784, 0.06679146486726767, 2.198994037259884,   0.04681381438098854,   0.020552661700512145,  0.3207768014500342,    0.029083396925344066, 0.04101487585430637,   1.077722588770549E-4, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
    private static double[] expected_20060116_ocean = new double[]{0.06674266859987914, 0.05270575492147841, 0.037690366457760964, 0.03184916519569875, 0.021960431891169183, 0.014177790616298265, 0.011078825564823104, 0.010191746071164211, 0.008881982756463491, 0.007173714204852539, 0.0063869638297191595, 0.004658747017442468, 0.19612273285058202, 0.15208325702483771, 0.10439082827159751, 0.08991463345550121, 0.06371829223017628, 0.04367318630983488, 0.034154774992877016, 0.031448962355680524, 0.027540532051233375, 0.022289752660044036, 0.020054942919449426, 0.014700377412599015, 0.018801580023626294,  0.01749127590228971,   0.01615895512232455,   0.011099655879042065,   0.005981242968584587,  0.001171287257902338,  6.302641682488678E-4,  5.453439394277851E-4,  2.8751906297250186E-4, 7.672124386876352E-5,  8.048275902265413E-5, 2.8671553607927577E-5,  0.81703898423574279, 0.8546490239665887, 0.8961648950703773, 0.9089629851291323, 0.9330480152889464, 0.951846236324495,  0.961201105782176,  0.963988530909647,  0.9680239671311186, 0.9732454064022679, 0.9754827990609958, 0.9811292468062441, 0.8270071114484775, 0.8633355788325386, 0.9032190376583678, 0.9154907512269002,  0.9385223214241207, 0.9561699159662809, 0.9650200775211437, 0.9676198074887273, 0.9714073338746296, 0.9762510650828121, 0.9783580796679103, 0.983374259839251,  0.06971552310166788, 1.391147998525691,   0.032527490794646285,  0.0010791331667030176, 0.007948708853436598,  0.18019618251042693,  0.0037371295141783952, 1.690457460535281E-7, 13.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
    private static double[] expected_20060116_cloud = new double[]{0.3026792354396823, 0.30184442063205946, 0.3020461562031379, 0.3007758486396829, 0.3010356555643136, 0.3005364530236857, 0.3007750118065772, 0.30027829659637095, 0.29883401372349083, 0.2988576437013362, 0.2653722559834979, 0.2945622457458439,                    0.27942618584923534, 0.24551479304292703, 0.20571004887302413, 0.20367267231228936, 0.1672749238927293,  0.15836715305311627, 0.14798322483142307,  0.14528870155985246,  0.14177909080877787,  0.1281610454786304,   0.13779412906506006,  0.12743028071428472,  0.0506826703464467,    0.03778681086561182,   0.017660729157205502,  0.007474887477112944,   0.0029462811185233056, 4.8234962809398543E-4, 2.5226881124523445E-4, 2.1627441229813899E-4, 1.0847765951352204E-4, 2.7848669677397132E-5, 3.005386887593431E-5, 1.023467406690061E-5,  0.6963394296078214,  0.7273540761356064, 0.7648011439779634, 0.7769554825929026, 0.801566217927652,  0.8216954973491959, 0.8333790646636416, 0.8362241543303175, 0.8390265502217791, 0.842197438583068,  0.8437266912014763, 0.8433197471187758, 0.7329422240760464, 0.7634730262157314, 0.7999230491275399, 0.8115038485939088,  0.8347229789680487, 0.8540525658582826, 0.8645460215061157, 0.8671960262934348, 0.8692452082173961, 0.8710349122974814, 0.8714562778522269, 0.8697878618269281, 1.0,                 0.04744667861896092, 0.0014020594318015465, 0.0012077282620016707, 0.0010266086004479587, 0.0209149083521504,   0.01380389927449996,   6.2996205272874235, 66.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
    //    private static double[] expected_20060116_land = new double[]{0.05940486599705885, 0.04834449806498461, 0.03641968459789665, 0.033941544264534246, 0.035856072733429424, 0.025940122404248298, 0.020817244287082558, 0.01996426189636208, 0.04440945866001555, 0.09507140109908682, 0.09938762634020118, 0.1088207950157593, 0.2861516362277008, 0.25110823233267165, 0.2091002340678031, 0.19534451903870187, 0.1690007440322344, 0.14727878537231792, 0.1360584435237715, 0.13302024839968596, 0.12937359136718574, 0.12575618239900943, 0.12445800977584931, 0.12362624878405744, 1.9275933271288941E-4, 2.77419681982213E-4, 3.666989438929095E-4, 4.2620013340718765E-4, 4.936023586054581E-4, 2.27096291856562E-4, 1.2189942565112603E-4, 1.0690337335218247E-4, 6.06510936271031E-5, 1.7006299717784814E-5, 1.8337580603727284E-5, 5.898583680792376E-6, 0.6569523723522561, 0.6882092540451998, 0.7267631265404317, 0.7394281447615894, 0.7650146788352299, 0.7864268587575082, 0.7987883249449765, 0.8018427260130847, 0.8049983461235388, 0.8081965773164199, 0.8097003165245044, 0.8094302201531822, 0.7355406138046319, 0.7660323291802648, 0.8023329376503239, 0.8137839856183664, 0.8369282178247136, 0.8562257567627498, 0.8667597937144694, 0.8692809010592252, 0.8710995042619107, 0.8724199759679322, 0.872702315145844, 0.8702901616372646, 1.0, 0.0223707718561656, 1.6820898094440193, 2.4675568544226825, 4.953032424395115, 0.002704579812535653, 0.008388920394506888, 0.16216890527452435, 150.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
    private static double[] expected_20060116_land =  new double[]{0.05940486599705885, 0.04834449806498461, 0.03641968459789665, 0.033941544264534246, 0.035856072733429424, 0.025940122404248298, 0.020817244287082558, 0.01996426189636208, 0.04440945866001555, 0.09507140109908682, 0.09938762634020118, 0.1088207950157593, 0.2861516362277008, 0.25110823233267165, 0.2091002340678031, 0.19534451903870187, 0.1690007440322344, 0.14727878537231792, 0.1360584435237715, 0.13302024839968596, 0.12937359136718574, 0.12575618239900943, 0.12445800977584931, 0.12362624878405744, 1.9275933271288941E-4, 2.77419681982213E-4, 3.666989438929095E-4, 4.2620013340718765E-4, 4.936023586054581E-4, 2.27096291856562E-4, 1.2189942565112603E-4, 1.0690337335218247E-4, 6.06510936271031E-5, 1.7006299717784814E-5, 1.8337580603727284E-5, 5.898583680792376E-6, 0.6569523723522561, 0.6882092540451998, 0.7267631265404317, 0.7394281447615894, 0.7650146788352299, 0.7864268587575082, 0.7987883249449765, 0.8018427260130847, 0.8049983461235388, 0.8081965773164199, 0.8097003165245044, 0.8094302201531822, 0.7355406138046319, 0.7660323291802648, 0.8023329376503239, 0.8137839856183664, 0.8369282178247136, 0.8562257567627498, 0.8667597937144694, 0.8692809010592252, 0.8710995042619107, 0.8724199759679322, 0.872702315145844, 0.8702901616372646, 0.9544295892954113, 0.0223707718561656, 0.0862899322837085, 0.13405665549553797, 0.14261147508925487, 0.002704579812535653, 0.008388920394506888, 0.16216890527452435, 26.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};


    private LevMarNN levMarNN;

    @Before
    public void setUp() throws IOException {
        levMarNN = new LevMarNN(SensorContextFactory.fromTypeString("MER_RR__1P"));
    }

    @Test
    public void testL1b_testDataNorman() throws Exception {
        final double solar_zenith = 38.532475;
        final double solar_azimuth = 142.5679;
        final double view_zenith = 23.14311;
        final double view_azimuth = 103.322136;
        final double wind_x = 7.8687496;
        final double wind_y = -2.525;
        final double surf_pressure = 1017.61487;
        final double ozone = 317.83008;
        final double temperature = 20.0;
        final double salinity = 12.0;

        final double[] toa_radiances = {
                70.43595,
                60.354992,
                44.56492,
                39.043613,
                27.241674,
                15.729385,
                11.943042,
                10.802422,
                8.662219,
                6.4378233,
                2.8837085,
                5.4307566,
                3.2948744,
                3.0640657,
                2.1505015
        };

        final double[] input = assembleInput(solar_zenith,
                solar_azimuth,
                view_zenith,
                view_azimuth,
                wind_x,
                wind_y,
                surf_pressure,
                ozone,
                temperature,
                salinity,
                toa_radiances,
                SUN_SPECTRAL_FLUXES_NORMAN);
        final double[] output = new double[75];

        int result_1 = levMarNN.levmar_nn(181, input, output);
        assertEquals(0, result_1);
        assertArrayEquals(expected_Norman, output, 1e-7);
    }

    @Test
    public void testLib_MER_RR__1PRACR20060116_201233_000026092044_00200_20294_0000_ocean() throws Exception {
        final double solar_zenith = 43.913773;
        final double solar_azimuth = 76.12128;
        final double view_zenith = 34.740032;
        final double view_azimuth = 108.32797;
        final double wind_x = 5.7124996;
        final double wind_y = 2.25625;
        final double surf_pressure = 1021.8688;
        final double ozone = 277.4056;
        final double temperature = 18.54;
        final double salinity = 35.34;

        final double[] toa_radiances = {
                84.99878,
                73.27003,
                53.322674,
                44.631977,
                27.512224,
                16.187922,
                12.244357,
                10.961995,
                9.097538,
                6.74975,
                3.1055324,
                5.605122,
                3.3304179,
                3.0823767,
                2.4926267
        };

        final double[] input = assembleInput(solar_zenith,
                solar_azimuth,
                view_zenith,
                view_azimuth,
                wind_x,
                wind_y,
                surf_pressure,
                ozone,
                temperature,
                salinity,
                toa_radiances,
                SUN_SPECTRAL_FLUXES_20060116);

        final double[] output = new double[75];

        int result_1 = levMarNN.levmar_nn(873, input, output);
        assertEquals(0, result_1);
        assertArrayEquals(expected_20060116_ocean, output, 1e-7);
    }

    @Test
    public void testLib_MER_RR__1PRACR20060116_201233_000026092044_00200_20294_0000_cloud() throws Exception {
        final double solar_zenith = 42.372684;
        final double solar_azimuth = 128.2194;
        final double view_zenith = 23.510494;
        final double view_azimuth = 102.27474;
        final double wind_x = -9.75;
        final double wind_y = 0.6750001;
        final double surf_pressure = 1009.8656;
        final double ozone = 237.87592;
        final double temperature = 27.4855;
        final double salinity = 34.962;

        final double[] toa_radiances = {
                398.09485,
                434.67896,
                440.62158,
                433.41943,
                390.89935,
                356.09332,
                342.04077,
                331.19794,
                312.51495,
                287.70917,
                135.00192,
                237.70004,
                215.58147,
                205.36565,
                164.44276
        };

        final double[] input = assembleInput(solar_zenith,
                solar_azimuth,
                view_zenith,
                view_azimuth,
                wind_x,
                wind_y,
                surf_pressure,
                ozone,
                temperature,
                salinity,
                toa_radiances,
                SUN_SPECTRAL_FLUXES_20060116);

        final double[] output = new double[75];

        int result_1 = levMarNN.levmar_nn(748, input, output);
        assertEquals(0, result_1);
        assertArrayEquals(expected_20060116_cloud, output, 1e-2);
    }

    @Test
    public void testLib_MER_RR__1PRACR20060116_201233_000026092044_00200_20294_0000_land() throws Exception {
        final double solar_zenith = 50.82132;
        final double solar_azimuth = 140.0397;
        final double view_zenith = 21.953356;
        final double view_azimuth = 101.89219;
        final double wind_x = -4.1289067;
        final double wind_y = -1.8664063;
        final double surf_pressure = 1018.4313;
        final double ozone = 231.5093;
        final double temperature = 24.5196;
        final double salinity = 34.808;

        final double[] toa_radiances = {
                66.59864,
                59.22042,
                45.29473,
                41.82709,
                39.72433,
                26.201996,
                20.222364,
                18.84353,
                38.00525,
                78.18966,
                23.406841,
                76.28124,
                67.89858,
                66.15208,
                40.435944
        };

        final double[] input = assembleInput(solar_zenith,
                solar_azimuth,
                view_zenith,
                view_azimuth,
                wind_x,
                wind_y,
                surf_pressure,
                ozone,
                temperature,
                salinity,
                toa_radiances,
                SUN_SPECTRAL_FLUXES_20060116);

        final double[] output = new double[75];

        int result_1 = levMarNN.levmar_nn(723, input, output);
        assertEquals(0, result_1);
        assertArrayEquals(expected_20060116_land, output, 1e-2);
    }

    private double[] assembleInput(double solar_zenith,
                                   double solar_azimuth,
                                   double view_zenith,
                                   double view_azimuth,
                                   double wind_x,
                                   double wind_y,
                                   double surf_pressure,
                                   double ozone,
                                   double temperature,
                                   double salinity,
                                   double[] toa_radiances,
                                   double[] sun_spectral_fluxes) {
        final double[] input = new double[40];
        input[0] = solar_zenith;
        input[1] = solar_azimuth;
        input[2] = view_zenith;
        input[3] = view_azimuth;
        input[4] = surf_pressure;
        input[5] = ozone;
        input[6] = wind_x;
        input[7] = wind_y;
        input[8] = temperature;
        input[9] = salinity;
        for (int i = 0; i < 15; i++) {
            input[i + 10] = toa_radiances[i];
            input[i + 25] = sun_spectral_fluxes[i];
        }
        return input;
    }
}
